<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imooc.mapper.ItemsMapperCustom">

    <select id="queryItemComments" resultType="com.imooc.pojo.vo.ItemCommentVo" parameterType="Map">
        SELECT
        ic.comment_level as commentLevel,
        ic.content as content,
        ic.sepc_name as specName,
        ic.created_time as createdTime,
        u.face as userFace,
        u.nickname as nickname

        FROM
        items_comments ic
        LEFT JOIN users u ON ic.user_id = u.id
        WHERE
        ic.item_id = #{paramsMap.itemId}
        <if test=" paramsMap.level !=null and paramsMap.level != '' ">
            AND ic.comment_level = #{paramsMap.level}
        </if>
    </select>

	<!--K.默认，代表默认排序，根据name -->
	<!--c:根据销量排序 -->
	<!--p:根据价格排序 -->
    <select id="searchItems" resultType="com.imooc.pojo.vo.SearchItemsVo" parameterType="Map">
		SELECT
			i.id AS itemId,
			i.item_name AS itemName,
			i.sell_counts AS sellCounts,
			ii.url AS imgUrl,
			tempSpec.price AS price
		FROM
			items i
		LEFT JOIN items_img ii ON i.id = ii.item_id
		LEFT JOIN ( SELECT item_id AS itemId, min( price_discount ) AS price FROM items_spec WHERE 1 = 1 GROUP BY item_id ) tempSpec
		ON tempSpec.itemId = i.id
		WHERE
			ii.is_main = 1
		<if test="paramsMap.keywords !=null and paramsMap.keywords != '' ">
			AND  i.item_name like '%${paramsMap.keywords}%'
		</if>
		order  by
		<choose>
			<when test="paramsMap.sort == &quot;c&quot; ">
				i.sell_counts desc
			</when>
			<when test="paramsMap.sort == &quot;p&quot; ">
				tempSpec.price asc
			</when>
			<otherwise>
				i.item_name asc
			</otherwise>
		</choose>
	</select>

	<select id="searchItemsByThirdCat" resultType="com.imooc.pojo.vo.SearchItemsVo" parameterType="Map">
		SELECT
			i.id AS itemId,
			i.item_name AS itemName,
			i.sell_counts AS sellCounts,
			ii.url AS imgUrl,
			tempSpec.price AS price
		FROM
			items i
		LEFT JOIN items_img ii ON i.id = ii.item_id
		LEFT JOIN ( SELECT item_id AS itemId, min( price_discount ) AS price FROM items_spec WHERE 1 = 1 GROUP BY item_id ) tempSpec
			ON tempSpec.itemId = i.id
		WHERE
			ii.is_main = 1
			AND  i.cat_id = #{paramsMap.catId}
		order  by
		<choose>
			<when test="paramsMap.sort == &quot;c&quot; ">
				i.sell_counts desc
			</when>
			<when test="paramsMap.sort == &quot;p&quot; ">
				tempSpec.price asc
			</when>
			<otherwise>
				i.item_name asc
			</otherwise>
		</choose>
	</select>

	<select id="queryItemsBySpecIds" parameterType="List" resultType="com.imooc.pojo.vo.ShopcartVo">
		SELECT
			items.id AS itemId,
			items.item_name AS itemName,
			items_img.url AS itemImgUrl,
			items_spec.id AS specId,
			items_spec.`name` AS specName,
			items_spec.price_discount AS priceDiscount,
			items_spec.price_normal AS priceNormal
		FROM
			items_spec
			LEFT JOIN items ON items.id = items_spec.item_id
			LEFT JOIN items_img ON items_img.item_id = items.id
		WHERE
			items_img.is_main = 1
		AND items_spec.id IN
		<foreach collection="paramsList" index="index" item="specId" open="("  separator="," close=")">
			 #{specId}
		</foreach>

	</select>

	<update id="decreaseItemSpecStock">
		UPDATE items_spec
		SET stock = stock - #{pendingCounts}
		WHERE id = #{specId}
	    AND stock >= #{pendingCounts}
	</update>
</mapper>